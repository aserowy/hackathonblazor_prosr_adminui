
<div class="opblock-section-header">
    <div class="tab-header">
        <h4 class="opblock-title">Parameters <AnchorLink href="@("#message-"+SendingData.InputType.ToLowerInvariant())">@SendingData.InputType</AnchorLink></h4>
    </div>
</div>
<div class="table-container">
    <MessageComponent MessageData=@MessageResolver.GetByName(SendingData.InputType)></MessageComponent>
</div>
<div class="table-container">
    <EditForm Model=@_request OnSubmit=@HandleFormSubmitAsync>
        <InputTextArea @bind-Value=_request.Value></InputTextArea>

        <button type="submit">Submit</button>
    </EditForm>
</div>
@if (SendingData.Returning != null)
{
    <ReturningComponent ReturningData="SendingData.Returning"></ReturningComponent>
}

@code {
    [CascadingParameter] public IGenericHubClient HubClient { get; set; }
    [CascadingParameter] public IMessageResolver MessageResolver { get; set; }

    [Parameter] public Sending SendingData { get; set; }

    private FormModel _request = new FormModel();

    private async Task HandleFormSubmitAsync()
    {
        if (HubClient is null)
        {
            return;
        }

        var model = MessageResolver.GetObject(SendingData.InputType, _request.Value);

        await HubClient
            .InvokeAsync(SendingData.Ident, model)
            .ConfigureAwait(false);
    }
}
